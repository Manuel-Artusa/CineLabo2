create database cines_final
go
use cines_final
go
--Formato 3D - 2D - 4D
create table Tipo_formato
(id_tipo_formato int identity (1,1) primary key,
descripcion varchar(100)
)
--Generos de Peliculas
CREATE TABLE GENEROS(
ID_GENERO INT IDENTITY (1,1)PRIMARY KEY,
DESCRIPCION VARCHAR(50)
)
--ATP, +13, +18, +21
CREATE TABLE CLASIFICACION(
ID_CLASIFICACION INT IDENTITY (1,1)PRIMARY KEY,
DESCRIPCION VARCHAR(50)
)
--Tarjeta,efectivo,debito
CREATE TABLE FORMA_PAGO(
ID_FORMA_PAGO INT IDENTITY (1,1)PRIMARY KEY,
DESCRIPCION VARCHAR(20)
)
--pasaporte,dni,etc.
CREATE TABLE TIPOS_DOC(
ID_TIPO_DOC INT IDENTITY (1,1)PRIMARY KEY,
DESCRIPCION VARCHAR(20)
)
--adm,cajero,gerente
CREATE TABLE CARGOS(
ID_CARGO INT IDENTITY (1,1)PRIMARY KEY,
DESCRIPCION VARCHAR(20)
)
--actores
CREATE TABLE ACTORES(
ID_ACTOR INT IDENTITY (1,1)PRIMARY KEY,
id_pelicula int,
NOMBRE VARCHAR(25),
APELLIDO VARCHAR(25)
constraint fk_pelicula foreign key(id_pelicula)
references Peliculas(id_pelicula)
)
--directores
CREATE TABLE DIRECTORES(
ID_DIRECTOR INT IDENTITY (1,1)PRIMARY KEY,
NOMBRE VARCHAR(25),
APELLIDO VARCHAR(25)
)
--Idiomas
CREATE TABLE IDIOMAS(
ID_IDIOMA INT IDENTITY (1,1)PRIMARY KEY,
IDIOMA VARCHAR(20)
)
--Pais
CREATE TABLE PAIS_ORIGEN(
ID_PAIS_ORIGEN INT IDENTITY (1,1 )PRIMARY KEY,
PAIS VARCHAR (30))
--provincia
CREATE TABLE PROVINCIAS(
ID_PROVINCIA INT IDENTITY (1,1)PRIMARY KEY,
PROVINCIA VARCHAR(50))
--localidad
CREATE TABLE LOCALIDADES(
ID_LOCALIDAD INT IDENTITY (1,1) PRIMARY KEY,
LOCACLIDAD VARCHAR(50),
ID_PROVINCIA INT
CONSTRAINT fk_prov_localidad  FOREIGN KEY (ID_PROVINCIA)
references PROVINCIAS(ID_PROVINCIA))
--barrio
CREATE TABLE BARRIOS(
ID_BARRIO INT IDENTITY (1,1)PRIMARY KEY,
BARRIOS VARCHAR (50),
ID_LOCALIDAD INT
CONSTRAINT FK_LOCALIDAD_BARRIOS  FOREIGN KEY (ID_LOCALIDAD)
references LOCALIDADES(ID_LOCALIDAD))
--CLIENTSES
CREATE TABLE CLIENTES(
ID_CLIENTE INT identity(1,1) PRIMARY KEY  ,
NOMBRE_CLIENTE VARCHAR(25),
/*SOCIO BOOL*/ 
APELLIDO_CLIENTE VARCHAR(20),
ID_TIPO_DOC INT,
DOCUMENTO BIGINT,
TELEFONO BIGINT,
EMAIL VARCHAR(50))


--Empleados
CREATE TABLE EMPLEADOS(
ID_EMPLEADO INT IDENTITY(1,1) PRIMARY KEY,
NOMBRE_EMPLEADO VARCHAR(20),
APELLIDO_EMPLEADO VARCHAR(20),
EMAIL VARCHAR(20),
ID_BARRIO INT,
ID_CARGO INT,
CONSTRAINT FK_EMPLEADOS_BARRIOS FOREIGN KEY (ID_BARRIO)
REFERENCES BARRIOS(ID_BARRIO),
CONSTRAINT FK_EMPLEADO_CARGO FOREIGN KEY(ID_CARGO)
REFERENCES CARGOS(ID_CARGO)
)
--CINES
CREATE TABLE CINES(
ID_CINE INT IDENTITY (1,1)PRIMARY KEY,
ID_BARRIO INT,
NOMBRE_CINE VARCHAR(20),
CONSTRAINT FK_CINES_BARRIOS FOREIGN KEY(ID_BARRIO)
REFERENCES BARRIOS(ID_BARRIO))
--Peliculas
CREATE TABLE PELICULAS(
ID_PELICULA INT IDENTITY(1,1) PRIMARY KEY,
TITULO VARCHAR(100),
DURACION TIME,
ID_CLASIFICACION INT,
ID_IDIOMA INT,
FEC_ESTRENO DATETIME,
ID_PAIS_ORIGEN INT


CONSTRAINT FK_PELI_CLASIFICACION FOREIGN KEY(ID_CLASIFICACION)
REFERENCES CLASIFICACION (ID_CLASIFICACION),
CONSTRAINT FK_PELI_IDIOMA FOREIGN KEY (ID_IDIOMA)
REFERENCES IDIOMAS(ID_IDIOMA),
CONSTRAINT FK_PELI_PAIS FOREIGN KEY(ID_PAIS_ORIGEN)
REFERENCES PAIS_ORIGEN(ID_PAIS_ORIGEN)
)
--Funciones 
CREATE TABLE FUNCIONES(
ID_FUNCION INT IDENTITY(1,1) PRIMARY KEY,
ID_PELICULA INT,
HORA TIME,
FECHA DATETIME,
PRECIO_ACTUAL MONEY,
ID_TIPO_FORMATO INT,
constraint fk_pelicula foreign key(ID_PELICULA)
references PELICULAS(ID_PELICULA),

CONSTRAINT FK_FUNCION_TIPO_FORMATO FOREIGN KEY (ID_TIPO_FORMATO)
REFERENCES TIPO_FORMATO(ID_TIPO_FORMATO)
)
--butacas
create table butacas(
id_butaca int identity(1,1) primary key,
nro_butaca int,
fila varchar(1))
--SALAS
CREATE TABLE SALAS(
ID_SALA INT IDENTITY(1,1) PRIMARY KEY,
id_butaca int,
CANTIDAD_ASIENTOS INT,
ID_CINE INT,
id_funcion int
constraint fk_funcion foreign key(id_funcion)
references FUNCIONES(ID_FUNCION),
constraint fk_butaca foreign key(id_butaca)
references Butacas(id_butaca))


--Tabla intermedio en Pelicula Genero
create table Peliculas_Genero
(id_pelicula_genero int identity (1,1) primary key,
id_pelicula int,
id_genero int 
CONSTRAINT fk_peliculas_genero_pelicula FOREIGN KEY (ID_pelicula)
REFERENCES peliculas(id_pelicula),
CONSTRAINT fk_peliculas_genero_genero FOREIGN KEY (ID_genero)
REFERENCES generos(id_genero)
)

--Productos Candy bar
CREATE TABLE PRODUCTOS_CANDY_BAR (
    ID_PRODUCTO_CANDY_BAR INT IDENTITY(1, 1) PRIMARY KEY,
    NOMBRE VARCHAR(50),
    DESCRIPCION VARCHAR(200),
    PRECIO int
);
--Comprobantes
CREATE TABLE COMPROBANTES(
ID_COMPROBANTE INT IDENTITY(1,1) PRIMARY KEY,
ID_CLIENTE INT,
ID_EMPLEADO INT,
FECHA DATETIME,
ID_CINE INT
CONSTRAINT FK_COMP_CLIENTE FOREIGN KEY (ID_CLIENTE)
REFERENCES CLIENTES(ID_CLIENTE),
CONSTRAINT FK_COMP_EMPLEADO FOREIGN KEY(ID_EMPLEADO)
REFERENCES EMPLEADOS(ID_EMPLEADO),
CONSTRAINT FK_COMP_CINE FOREIGN KEY(ID_CINE)
REFERENCES CINES(ID_CINE),
constraint FK_CLIENTE_S foreign key(ID_CLIENTE)
 references CLIENTES(ID_CLIENTE))

-- Tabla para las Ventas del Candy Bar
CREATE TABLE VENTAS_CANDY_BAR (
    ID_VENTA_CANDY_BAR INT IDENTITY(1, 1) PRIMARY KEY,
    ID_PRODUCTO_CANDY_BAR INT,
    CANTIDAD INT,
    PRECIO_TOTAL MONEY,
    CONSTRAINT FK_VENTAS_PRODUCTO_CANDY_BAR FOREIGN KEY (ID_PRODUCTO_CANDY_BAR)
        REFERENCES PRODUCTOS_CANDY_BAR (ID_PRODUCTO_CANDY_BAR)
);
CREATE TABLE DETALLE_COMPROBANTE (
    id_detalle_comprobante int identity (1,1) primary key,
    id_comprobante int,
    id_funcion int,
    id_sala int,
    id_pelicula int,
	id_butaca int, 
	precio_total money
    CONSTRAINT FK_DETALLE_COMP_COMPROBANTE FOREIGN KEY (id_comprobante)
        REFERENCES COMPROBANTES (ID_COMPROBANTE),
    CONSTRAINT FK_DETALLE_COMP_SALA FOREIGN KEY (id_sala)
        REFERENCES SALAS (ID_SALA),
    CONSTRAINT FK_DETALLE_COMP_FUNCIONES FOREIGN KEY (id_funcion)
        REFERENCES FUNCIONES(ID_FUNCION),
	CONSTRAINT FK_DETALLE_COMP_BUTACAS FOREIGN KEY (id_butaca)
	REFERENCES BUTACAS (ID_BUTACA)
);

CREATE TABLE USUARIOS (
    ID_USUARIO INT IDENTITY(1,1) PRIMARY KEY,
    ID_EMPLEADO INT,
    USUARIO VARCHAR(50),
    CONTRASENIA VARCHAR(50),
    CONSTRAINT FK_USUARIOS_EMPLEADO FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADOS (ID_EMPLEADO)
);






--alter table salas
--add id_funcion int


--alter table salas
--add constraint fk_funcion foreign key(id_funcion)
--references FUNCIONES(ID_FUNCION)


--alter table Salas 
--add id_butaca int


--alter table Salas
--add constraint fk_butaca foreign key(id_butaca)
--references Butacas(id_butaca)

--drop table butacas_salas

--select * FROM CLIENTES c
--join TIPOS_DOC t on t.ID_TIPO_DOC = c.ID_TIPO_DOC

--alter table Clientes 
--alter column ID_CLIENTE int IDENTITY(1,1)

--alter table Comprobantes
--add constraint FK_CLIENTE_S foreign key(ID_CLIENTE)
-- references CLIENTES(ID_CLIENTE)

 

-- alter table Detalle_Comprobante
-- drop column id_venta_candy_bar